name: Build and deploy to server

on:
  push:
    branches: ["master"]
    paths-ignore:
      - ".github/**"
      - ".docs/**"
  workflow_dispatch:
    inputs:
      hash:
        description: "Docs Staging Hash"
        type: string
        default: main
        required: true
      fallback:
        description: "Fallback by hash"
        type: boolean
        default: false
        required: false

concurrency: ci-prod

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build website
    steps:
      - name: Check disk usage
        run: df -h
      - name: Remove unused Docker images
        run: docker system prune -af

      - uses: actions/checkout@v3
        with:
          ref: "master"
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "yarn"

      - name: Update submodule
        id: submodule
        run: |
          git submodule init
          git submodule update --remote
          cd docs
          git checkout main
          cd ..
          echo "submodule_sha=$(git submodule status | awk '{print $1}' | sed -r 's/[+-]+//g')" >> $GITHUB_OUTPUT
          echo "submodule_status=$(git submodule status)" >> $GITHUB_OUTPUT
          echo "git_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "build_date=$(date)" >> $GITHUB_OUTPUT

      - name: Install deps
        run: yarn

      - name: Calc gatsby cache key
        id: calc-cache-key
        run: |
          if ${{ !!inputs.fallback }}
          then
            echo "key=${{ inputs.hash }}" >> $GITHUB_OUTPUT
          else
            echo "key=${{ steps.submodule.outputs.submodule_sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Restore gatsby cache
        uses: actions/cache@v3
        id: gatsby-cache
        with:
          path: |
            .cache
            public
          key: ${{ runner.os }}-gatsby-cache-docs-staging-${{ steps.calc-cache-key.outputs.key }}
          restore-keys: |
            ${{ runner.os }}-gatsby-cache-docs-staging-

      - name: Clean up temporary files
        run: |
          sudo rm -rf /tmp/*
          sudo rm -rf /home/runner/work/_temp/*

      - name: Build website
        if: ${{ !inputs.fallback || (steps.gatsby-cache.outputs.cache-hit != 'true') }}
        env:
          CI: true
          GATSBY_ALGOLIA_APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
          GATSBY_ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
          GATSBY_DOC_BUILD_DATE: ${{ steps.submodule.outputs.build_date }}
          GATSBY_DOC_BUILD_GIT_SHA: ${{ steps.submodule.outputs.git_sha }}
          GATSBY_DOC_BUILD_SUBMODULE_SHA: ${{ steps.submodule.outputs.submodule_status }}
          GATSBY_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        run: |
          yarn build --verbose

      - name: Check output
        id: check-output
        run: |
          sudo apt install tree
          tree public

      - name: Install rclone
        run: |
          curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip
          unzip rclone-current-linux-amd64.zip
          mv rclone-*-linux-amd64/rclone ./

      - name: Upload test file
        env:
          RCLONE_CONN_STRING: ":s3,endpoint=cos.ap-beijing.myqcloud.com,access_key_id=${{ secrets.TENCENTCLOUD_SECRET_ID }},secret_access_key=${{ secrets.TENCENTCLOUD_SECRET_KEY }},force_path_style=false"
          TENCENTCLOUD_BUCKET_ID: ${{ secrets.TENCENTCLOUD_BUCKET_ID }}
        run: |
          ./rclone sync "${RCLONE_CONN_STRING}:${TENCENTCLOUD_BUCKET_ID}/prod" "${RCLONE_CONN_STRING}:${TENCENTCLOUD_BUCKET_ID}/archive" --delete-before --progress
          ./rclone sync public/ "${RCLONE_CONN_STRING}:${TENCENTCLOUD_BUCKET_ID}/prod" --delete-before --progress
