name: Incremental Building Triggered By Push Events

on: repository_dispatch

jobs:
  build:
    name: Retrieve docs and deploy the website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # https://github.com/gatsbyjs/gatsby/issues/11406
      - name: Increase file watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      # make sure there is only one workflow running
      - name: Turnstyle
        uses: softprops/turnstyle@v1

      - name: Set known_hosts
        id: known-hosts
        run: |
          echo "::set-output name=BJ_PROXY::$(ssh-keyscan -H ${{ secrets.BJ_PROXY_HOST }})"
          echo "::set-output name=LA1::$(ssh-keyscan -H ${{ secrets.LA_1_HOST }})"
          echo "::set-output name=LA2::$(ssh-keyscan -H ${{ secrets.LA_2_HOST }})"

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: |
            ${{ steps.known-hosts.outputs.BJ_PROXY }}
            ${{ steps.known-hosts.outputs.LA1 }}
            ${{ steps.known-hosts.outputs.LA2 }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Install deps
        run: yarn

      - name: Restore docs
        uses: actions/cache@v2
        id: docs
        with:
          path: ./markdown-pages
          key: ${{ runner.os }}-docs-newest-cache-${{ github.event.client_payload.sha }}
          restore-keys: |
            ${{ runner.os }}-docs-newest-cache-

      # if download_type is full, download all docs
      - name: Check restore status
        if: github.event.client_payload.download_type == 'full'
        run: |
          export GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }}
          yarn download:tidb:en:all
          yarn download:tidb:zh:all
          yarn download:dm:all
          yarn download:tidb-operator:all
          yarn download:dbaas:all
          yarn download:appdev:all

      - name: Incremental or not

      # incremental: get the base commit from cache for furthur use
      - name: Get base commit cache
        if: github.event.client_payload.download_type != 'full' && github.event.client_payload.repo != 'website-docs'
        id: cache-commit
        run: |
          PATH=/home/runner/work/website-docs/website-docs/markdown-pages/${{ github.event.client_payload.repo }}-${{ github.event.client_payload.ref }}-hash
          if [ -f "$PATH" ]; then
            BASE=$(cat $PATH)
          fi
          echo "get base hash: $BASE"
          echo "::set-output name=path::$PATH"
          echo "::set-output name=base::$BASE"

      # incremental: download changed files
      - name: Sync docs
        if: github.event.client_payload.download_type != 'full' && github.event.client_payload.repo != 'website-docs'
        run: GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }} yarn sync ${{ github.event.client_payload.repo }} --ref ${{ github.event.client_payload.ref }} ${{ steps.cache-commit.outputs.base }} ${{ github.event.client_payload.sha }}

      - name: Restore gatsby cache
        uses: actions/cache@v2
        id: gatsby-cache
        with:
          path: ./.cache
          key: ${{ runner.os }}-v1-gatsby-cache-${{ github.event.client_payload.sha }}
          restore-keys: |
            ${{ runner.os }}-v1-gatsby-cache-

      - name: Restore gatsby build
        uses: actions/cache@v2
        id: gatsby-build
        with:
          path: ./public
          key: ${{ runner.os }}-v1-gatsby-build-${{ github.event.client_payload.sha }}
          restore-keys: |
            ${{ runner.os }}-v1-gatsby-build-

      - name: Build website
        run: GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES=true GATSBY_ALGOLIA_APPLICATION_ID=${{ secrets.ALGOLIA_APPLICATION_ID }} GATSBY_ALGOLIA_API_KEY=${{ secrets.ALGOLIA_API_KEY }} yarn build

      - name: Deploy to LA1
        run: |
          rsync -avz --delete public/ "${{ secrets.SSH_USER }}@${{ secrets.LA_1_HOST }}:${{ secrets.DEPLOY_PATH }}"

      - name: Deploy to LA2
        run: |
          rsync -avz --delete public/ "${{ secrets.SSH_USER }}@${{ secrets.LA_2_HOST }}:${{ secrets.DEPLOY_PATH }}"

      - name: Deploy to BJ1
        run: |
          rsync -avz --delete -e 'ssh -p ${{ secrets.BJ_1_PROXY_PORT }} -o StrictHostKeyChecking=no' public/ "${{ secrets.SSH_USER }}@${{ secrets.BJ_PROXY_HOST }}:${{ secrets.DEPLOY_PATH }}"

      - name: Deploy to BJ2
        run: |
          rsync -avz --delete -e 'ssh -p ${{ secrets.BJ_2_PROXY_PORT }} -o StrictHostKeyChecking=no' public/ "${{ secrets.SSH_USER }}@${{ secrets.BJ_PROXY_HOST }}:${{ secrets.DEPLOY_PATH }}"

      - name: Update current commit sha to cache
        if: github.event.client_payload.download_type != 'full' && github.event.client_payload.repo != 'website-docs'
        run: |
          echo ${{ github.event.client_payload.sha }} > ${{ steps.cache-commit.outputs.path }}

      # if does full building, store latest commit shas of all docs repo
      - name: Update all commit hashes
        if: github.event.client_payload.download_type == 'full'
        run: |
          bash ./scripts/get-latest-commits.sh ${{ secrets.GH_TOKEN }}
