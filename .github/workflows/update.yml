name: Update docs on schedule and repository_dispatch
on:
  schedule:
    - cron: '0 0 * * *'
  repository_dispatch:
    types: [updated]
jobs:
  run:
    name: Retrieve docs and deploy the website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set known_hosts
        id: know-hosts
        run: |
          echo "::set-output name=BJ1::$(ssh-keyscan -H ${{ secrets.BJ_1_HOST }})"
          echo "::set-output name=BJ2::$(ssh-keyscan -H ${{ secrets.BJ_2_HOST }})"
          echo "::set-output name=LA1::$(ssh-keyscan -H ${{ secrets.LA_1_HOST }})"
          echo "::set-output name=LA2::$(ssh-keyscan -H ${{ secrets.LA_2_HOST }})"

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: |
            ${{ steps.know-hosts.outputs.BJ1 }}
            ${{ steps.know-hosts.outputs.BJ2 }}
            ${{ steps.know-hosts.outputs.LA1 }}
            ${{ steps.know-hosts.outputs.LA2 }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-yarn-

      - name: Install deps
        run: yarn

      - name: Download docs-tidb
        run: |
          GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }} yarn download:docs-tidb:en:all
          GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }} yarn download:docs-tidb:zh:all

      - name: Download docs-tidb-operator
        run: GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }} yarn download:docs-tidb-operator:all

      - name: Download docs-dm
        run: GITHUB_AUTHORIZATION_TOKEN=${{ secrets.GH_TOKEN }} yarn download:docs-dm:all

      - name: Restore gatsby cache
        uses: actions/cache@v2
        id: gatsby-cache
        with:
          path: ./.cache
          key: ${{ runner.os }}-gatsby-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-cache-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-gatsby-cache-

      - name: Restore gatsby build
        uses: actions/cache@v2
        id: gatsby-build
        with:
          path: ./public
          key: ${{ runner.os }}-gatsby-build-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-gatsby-build-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-gatsby-build-

      - name: Build website
        run: GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES=true GATSBY_ALGOLIA_APPLICATION_ID=${{ secrets.ALGOLIA_APPLICATION_ID }} GATSBY_ALGOLIA_API_KEY=${{ secrets.ALGOLIA_API_KEY }} yarn build --log-pages

      - name: Deploy
        run: |
          rsync -avz --delete public/ "${{ secrets.SSH_USER }}@${{ secrets.BJ_1_HOST }}:${{ secrets.DEPLOY_PATH }}"
          rsync -avz --delete public/ "${{ secrets.SSH_USER }}@${{ secrets.BJ_2_HOST }}:${{ secrets.DEPLOY_PATH }}"
          rsync -avz --delete public/ "${{ secrets.SSH_USER }}@${{ secrets.LA_1_HOST }}:${{ secrets.DEPLOY_PATH }}"
          rsync -avz --delete public/ "${{ secrets.SSH_USER }}@${{ secrets.LA_2_HOST }}:${{ secrets.DEPLOY_PATH }}"
